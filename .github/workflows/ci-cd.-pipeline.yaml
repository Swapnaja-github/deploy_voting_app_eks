name: CI/CD Pipeline
run-name: ${{ github.actor }} is Deploying

on:
  push:
    branches: 
      - main
    tags:
      - '*'
  workflow_dispatch:

jobs:
  build-test-and-docker:
    runs-on: ubuntu-latest
    env:
      IMAGE_TAG: ${{ github.ref_type == 'tag' && github.ref_name || github.sha }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker images
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/vote:latest ./multi-stack-application/vote
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/worker:latest ./multi-stack-application/worker
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/result:latest ./multi-stack-application/result


      - name: Push Docker images
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/vote:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/worker:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/result:latest

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Install kubectl & update kubeconfig for EKS 
        run: |
          curl -O https://s3.us-west-2.amazonaws.com/amazon-eks/1.32.0/2024-12-20/bin/linux/amd64/kubectl
          chmod +x ./kubectl
          mkdir -p $HOME/bin && cp ./kubectl $HOME/bin/kubectl && export PATH=$HOME/bin:$PATH
          aws eks update-kubeconfig --region ${{ secrets.AWS_REGION }} --name ${{ secrets.AWS_CLUSTER }}

      - name: Generate the final deployment template
        run: |
          sudo apt-get update
          sudo apt-get install -y gettext-base

          export VOTE_NAME="docker.io/${{ secrets.DOCKERHUB_USERNAME }}/voting_app:${{ env.IMAGE_TAG }}"
          envsubst < ./k8s/vote_deployment_svc.yaml > vote_deployment_svc.yaml

          export RESULT_NAME="docker.io/${{ secrets.DOCKERHUB_USERNAME }}/result_app:${{ env.IMAGE_TAG }}"
          envsubst < ./k8s/result_deployment_svc.yaml > vote_deployment_svc.yaml

          export VOTE_NAME="docker.io/${{ secrets.DOCKERHUB_USERNAME }}/worker-app:${{ env.IMAGE_TAG }}"
          envsubst < ./k8s/worker_deployment_svc.yaml > worker_deployment_svc.yaml


          echo "Final deployment:"
          cat vote_deployment_svc.yaml

      - name: Deploy to EKS
        run: |
            kubectl apply -f ./k8s/.
          # kubectl apply -f ./k8s/vote_deployment_svc.yaml
          # kubectl apply -f ./k8s/result_deployment_svc.yaml
          # kubectl apply -f ./k8s/worker_deployment_svc.yaml
          # kubectl apply -f ./k8s/redis_deployment_svc.yaml
          # kubectl apply -f ./k8s/postgres_deployment_svc.yaml
          # kubectl apply -f ./k8s/ingress.yaml
